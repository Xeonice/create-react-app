(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{142:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return i}));n(58),n(31),n(22),n(23),n(59),n(0);var r=n(228);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var s={id:"adding-a-css-modules-stylesheet",title:"Adding a CSS Modules Stylesheet",sidebar_label:"Adding CSS Modules"},o=[{value:"Button.module.css",id:"buttonmodulecss",children:[]},{value:"another-stylesheet.css",id:"another-stylesheetcss",children:[]},{value:"Button.js",id:"buttonjs",children:[]},{value:"Result",id:"result",children:[]}],l={rightToc:o},c="wrapper";function i(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(r.b)(c,a({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Note: this feature is available with ",Object(r.b)("inlineCode",{parentName:"p"},"react-scripts@2.0.0")," and higher.")),Object(r.b)("p",null,"This project supports ",Object(r.b)("a",a({parentName:"p"},{href:"https://github.com/css-modules/css-modules"}),"CSS Modules")," alongside regular stylesheets using the ",Object(r.b)("inlineCode",{parentName:"p"},"[name].module.css")," file naming convention. CSS Modules allows the scoping of CSS by automatically creating a unique classname of the format ",Object(r.b)("inlineCode",{parentName:"p"},"[filename]\\_[classname]\\_\\_[hash]"),"."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Tip:")," Should you want to preprocess a stylesheet with Sass then make sure to ",Object(r.b)("a",a({parentName:"p"},{href:"/docs/adding-a-sass-stylesheet"}),"follow the installation instructions")," and then change the stylesheet file extension as follows: ",Object(r.b)("inlineCode",{parentName:"p"},"[name].module.scss")," or ",Object(r.b)("inlineCode",{parentName:"p"},"[name].module.sass"),".")),Object(r.b)("p",null,"CSS Modules let you use the same CSS class name in different files without worrying about naming clashes. Learn more about CSS Modules ",Object(r.b)("a",a({parentName:"p"},{href:"https://css-tricks.com/css-modules-part-1-need/"}),"here"),"."),Object(r.b)("h2",{id:"buttonmodulecss"},Object(r.b)("inlineCode",{parentName:"h2"},"Button.module.css")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-css"}),".error {\n  background-color: red;\n}\n")),Object(r.b)("h2",{id:"another-stylesheetcss"},Object(r.b)("inlineCode",{parentName:"h2"},"another-stylesheet.css")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-css"}),".error {\n  color: red;\n}\n")),Object(r.b)("h2",{id:"buttonjs"},Object(r.b)("inlineCode",{parentName:"h2"},"Button.js")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"import React, { Component } from 'react';\nimport styles from './Button.module.css'; // Import css modules stylesheet as styles\nimport './another-stylesheet.css'; // Import regular stylesheet\n\nclass Button extends Component {\n  render() {\n    // reference as a js object\n    return <button className={styles.error}>Error Button</button>;\n  }\n}\n")),Object(r.b)("h2",{id:"result"},"Result"),Object(r.b)("p",null,"No clashes from other ",Object(r.b)("inlineCode",{parentName:"p"},".error")," class names"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-html"}),'\x3c!-- This button has red background but not red text --\x3e\n<button class="Button_error_ax7yz">Error Button</button>\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"This is an optional feature.")," Regular ",Object(r.b)("inlineCode",{parentName:"p"},"<link>")," stylesheets and CSS files are fully supported. CSS Modules are turned on for files ending with the ",Object(r.b)("inlineCode",{parentName:"p"},".module.css")," extension."))}i.isMDXComponent=!0},228:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return p}));var r=n(0),a=n.n(r),s=a.a.createContext({}),o=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},l=function(e){var t=o(e.components);return a.a.createElement(s.Provider,{value:t},e.children)};var c="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),u=o(n),p=r,b=u[l+"."+p]||u[p]||i[p]||s;return n?a.a.createElement(b,Object.assign({},{ref:t},c,{components:n})):a.a.createElement(b,Object.assign({},{ref:t},c))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<s;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);